# server image
FROM web_base

RUN yum install -y                   \
                httpd                \
                postgresql-server    \
                postgresql-devel     \
                libpq                \
                sudo                 \
 && yum clean all                    \
 && rm -rf /var/cache/yum

RUN cd /opt \
    && wget https://github.com/marc1uk/libpqxx/raw/master/libpqxx-6.4.5_fixed.tar.gz \
    && tar zxvf libpqxx-6.4.5_fixed.tar.gz \
    && rm libpqxx-6.4.5_fixed.tar.gz \
    && cd libpqxx-6.4.5 \
    && mkdir install \
    && ./configure --disable-documentation --enable-shared --prefix=/opt/libpqxx-6.4.5/install \
    && make -j`nproc --all` \
    && make install

RUN cd /opt \
    && git clone https://github.com/ToolDAQ/middleman.git \
    && cd middleman/ \
    && . Setup.sh \
    && make

# sed replacements can be removed once PR #1 is merged
# docs build fails if index.html is not present, which kills the docker build
RUN cd /opt \
    && git clone https://github.com/ToolDAQ/cgicc-3.2.9.git \
    && cd cgicc-3.2.9 \
    && ./configure \
    && sed -i '327s/.*/    cgicc::copy_if(fFormData.begin(), fFormData.end(),/' cgicc/Cgicc.cpp \
    && sed -i '331s/.*/    cgicc::copy_if(fFormData.begin(), fFormData.end(),/' cgicc/Cgicc.cpp \
    && mkdir -p doc/html \
    && touch doc/html/index.html \
    && make -j`nproc --all` \
    && make install \
    && cd ../ \
    && rm -rf cgicc-3.2.9

RUN cd /web \
    && git clone https://github.com/ToolDAQ/WebServer.git . \
    && cd /web/cgi-bin/ \
    && make clean \
    && make -j `nproc --all` \
    && cd /web \
    && make clean \
    && make -j `nproc --all`

RUN sudo -u postgres /usr/bin/initdb /var/lib/pgsql/data/ \
    && cd /var/lib/pgsql/ \
    && sudo -u postgres /usr/bin/pg_ctl start -D /var/lib/pgsql/data -s -o "-p 5432" -w -t 300 \
    && sudo -u postgres createuser -s root \
    && sudo -u postgres psql -c "create database daq with owner=root;" \
    && psql -ddaq -c "create table monitoring (time timestamp with time zone NOT NULL, device text NOT NULL, data JSONB NOT NULL);"\
    && psql -ddaq -c "create table logging (time timestamp with time zone NOT NULL, device text NOT NULL, severity integer NOT NULL, message text NOT NULL);"\
    && psql -ddaq -c "create table alarms (time timestamp with time zone NOT NULL, device text NOT NULL, level integer NOT NULL, alarm text NOT NULL, silenced integer DEFAULT 0 );"\
    && psql -ddaq -c "create table device_config (time timestamp with time zone NOT NULL, device text NOT NULL, version int NOT NULL, author text NOT NULL, description text NOT NULL, data JSONB NOT NULL, UNIQUE (device, version) );"\
    && psql -ddaq -c "create table calibration (time timestamp with time zone NOT NULL, device text NOT NULL, version int NOT NULL, description text NOT NULL, data JSONB NOT NULL, UNIQUE (device, version) );"\
    && psql -ddaq -c "create table configurations (config_id int NOT NULL primary key, time timestamp with time zone NOT NULL, name text NOT NULL, version int NOT NULL, description text NOT NULL, author text NOT NULL, data JSONB NOT NULL, UNIQUE (config_id) );"\
    && psql -ddaq -c "create table run_info (run int NOT NULL, subrun int NOT NULL, start_time timestamp with time zone NOT NULL, stop_time timestamp with time zone, config_id int NOT NULL, comments text NOT NULL, UNIQUE (run, subrun));"\
    && echo " sudo -u postgres /usr/bin/pg_ctl start -D /var/lib/pgsql/data -s -o \"-p 5432\" -w -t 300;" >> /etc/rc.local

RUN echo "unalias cp" >>  /etc/rc.local ;\
    echo "cp -f /web/httpd.conf /etc/httpd/conf/" >>  /etc/rc.local ;\
    echo "alias cp='cp -i'" >>  /etc/rc.local ;\
    echo "export LD_LIBRARY_PATH=/opt/ToolDAQFramework/lib:/opt/boost_1_66_0/install/lib:/opt/zeromq-4.0.7/lib:$LD_LIBRARY_PATH" >> /etc/rc.local ;\
    echo "/opt/middleman/run_middleman.sh &> /dev/null &" >> /etc/rc.local ;\
    echo 'disown $!' >> /etc/rc.local ;\
    echo "/web/Win_Mac_translation_server  &> /dev/null &" >> /etc/rc.local ;\
    echo 'disown $!' >> /etc/rc.local ;\
    echo "/web/Trigger_proxy  &> /dev/null &" >> /etc/rc.local ;\
    echo 'disown $!' >> /etc/rc.local ;\
    echo "httpd" >> /etc/rc.local ;\
    echo "/web/backgroundSD  &> /dev/null " >> /etc/rc.local ;\
    echo "sudo -u postgres /usr/bin/pg_ctl start -D /var/lib/pgsql/data -s -o \"-p 5432\" -w -t 300;" >> /etc/rc.local
    chmod +x /etc/rc.local

#ENTRYPOINT ["/bin/bash"]
#CMD ["-c",". /etc/rc.local"]
CMD /bin/bash -c '. /etc/rc.local'
